# -*- coding: utf-8 -*-
"""python_hw.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-1oYrI-DExiVoYYiGhrNjpNTgfIgM4Jp
"""

cars = [
{'mark': 'toyota', 'model': 'camry', 'year': 2010, 'price': 15000, 'id': 1},
{'mark': 'nissan', 'model': 'qashqai', 'year': 2019, 'price': 27300, 'id': 2},
 {'mark': 'toyota', 'model': 'corolla', 'year': 2011, 'price': 14000, 'id': 3},
 {'mark': 'bmw', 'model': '7', 'year': 2017, 'price': 19500, 'id': 4},
{'mark': 'toyota', 'model': 'camry', 'year': 2019, 'price': 31000, 'id': 5},
{'mark': 'bmw', 'model': '7', 'year': 2015, 'price': 18000, 'id': 6},
{'mark': 'toyota', 'model': 'corolla', 'year': 2011, 'price': 15000, 'id': 7},
{'mark': 'nissan', 'model': 'qashqai', 'year': 2014, 'price': 17000, 'id': 8},
{'mark': 'bmw', 'model': '5', 'year': 2010, 'price': 9000, 'id': 9},
{'mark': 'toyota', 'model': 'camry', 'year': 2010, 'price': 16000, 'id': 10},
{'mark': 'bmw', 'model': '7', 'year': 2015, 'price': 18000, 'id': 11},
{'mark': 'nissan',
'model': 'qashqai',
'year': 2014,
'price': 17300,
'id': 12},
{'mark': 'toyota', 'model': 'camry', 'year': 2021, 'price': 33500, 'id': 13},
{'mark': 'bmw', 'model': '5', 'year': 2008, 'price': 10000, 'id': 14},
{'mark': 'nissan',
'model': 'qashqai',
'year': 2015,
'price': 17300,
'id': 15},
{'mark': 'toyota', 'model': 'camry', 'year': 2002, 'price': 6400, 'id': 16},
{'mark': 'toyota',
'model': 'corolla',
'year': 2013,
'price': 14900,
'id': 17},
{'mark': 'bmw', 'model': '7', 'year': 2015, 'price': 18000, 'id': 18},
{'mark': 'toyota',
'model': 'corolla',
'year': 2011,
'price': 15000,
'id': 19},
{'mark': 'toyota', 'model': 'camry', 'year': 2002, 'price': 6400, 'id': 20},
{'mark': 'bmw', 'model': '7', 'year': 2011, 'price': 15500, 'id': 21},
{'mark': 'toyota', 'model': 'camry', 'year': 2012, 'price': 18000, 'id': 22},
{'mark': 'toyota', 'model': 'camry', 'year': 2020, 'price': 32000, 'id': 23},
{'mark': 'bmw', 'model': '5', 'year': 2005, 'price': 7000, 'id': 24},
{'mark': 'nissan',
'model': 'qashqai',
'year': 2015,
'price': 17000,
'id': 25},
{'mark': 'toyota',
'model': 'corolla',
'year': 2014,
'price': 18500,
'id': 26},
{'mark': 'toyota', 'model': 'camry', 'year': 2000, 'price': 5800, 'id': 27},
{'mark': 'nissan',
'model': 'qashqai',
'year': 2009,
'price': 11000,
'id': 28},
{'mark': 'bmw', 'model': '5', 'year': 2018, 'price': 19000, 'id': 29}]

people = [{"id": 1, "is_male": True, "age": 35},
          {"id": 2, "is_male": True, "age": 39},
          {"id": 3, "is_male": False, "age": 32},
          {"id": 4, "is_male": True, "age": 21},
          {"id": 5, "is_male": False, "age": 58},
          {"id": 6, "is_male": False, "age": 20},
          {"id": 7, "is_male": True, "age": 28},
          {"id": 8, "is_male": False, "age": 47},
          {"id": 9, "is_male": True, "age": 46},
          {"id": 10, "is_male": True, "age": 39},
          {"id": 11, "is_male": False, "age": 31},
          {"id": 12, "is_male": True, "age": 25},
          {"id": 13, "is_male": False, "age": 49},
          {"id": 14, "is_male": False, "age": 50},
          {"id": 15, "is_male": True, "age": 57},
          {"id": 16, "is_male": False, "age": 24},
          {"id": 17, "is_male": True, "age": 34},
          {"id": 18, "is_male": True, "age": 40},
          {"id": 19, "is_male": False, "age": 41},
          {"id": 20, "is_male": True, "age": 52},
          {"id": 21, "is_male": False, "age": 29},
          {"id": 22, "is_male": True, "age": 25},
          {"id": 23, "is_male": False, "age": 33},
          {"id": 24, "is_male": True, "age": 39},
          {"id": 25, "is_male": True, "age": 48},
          {"id": 26, "is_male": False, "age": 47},
          {"id": 27, "is_male": False, "age": 35},
          {"id": 28, "is_male": False, "age": 31},
          {"id": 29, "is_male": True, "age": 46}
]

# 1) Найти средний возраст мужчин и женщин
list_women = [i['age'] for i in people if not i['is_male']]
list_men = [i['age'] for i in people if i['is_male']]
print(f'average age among women: {sum(list_women) // len(list_women)}')
print(f'average age among men: {sum(list_men) // len(list_men)}')

# 2) По каждой модели вывести средний возраст собственника
model_total_age = {}
model_count = {}
people_map = {person['id']: person for person in people)
for car in cars:
    owner_age = people_map[car['id']]['age']
    model = car['model']
    if model in model_total_age:
        model_total_age[model] += owner_age
        model_count[model] += 1
    else:
        model_total_age[model] = owner_age
        model_count[model] = 1
average_ages = {model: model_total_age[model] // model_count[model] for model in model_total_age}

print(average_ages)

# 3) По каждой марке вывести соотношение полов собственников в процентах (60% - 40%)
marks = {}
people_map = {person['id']: person for person in people}
for car in cars:
  owner_gender = people_map[car['id']]['is_male']
  mark = car['mark']
  if mark in marks:
    if owner_gender:
      marks[mark]['male'] += 1
    else:
      marks[mark]['female'] += 1
  else:
    if owner_gender:
        marks[mark] = {'mark': mark, 'male': 1, 'female': 0}
    else:
        marks[mark] = {'mark': mark, 'male': 0, 'female': 1}
d = []
print('d = [')
for mark in marks.values():
  men_percentage = round((mark['male'] / (mark['male'] + mark['female'])) * 100)
  women_percentage = round((mark['female'] / (mark['male'] + mark['female'])) * 100)
  d.append({"mark": mark['mark'], "male": men_percentage, "female": women_percentage})
  print('\t', d[-1])
print(']')

# 4) По каждой модели вывести соотношение полов собственников в процентах (60% - 40%)
models = {}
people_map = {person['id']: person for person in people}
for car in cars:
  owner_gender = people_map[car['id']]['is_male']
  model = car['model']
  if model in models:
    if owner_gender:
      models[model]['male'] += 1
    else:
      models[model]['female'] += 1
  else:
    if owner_gender:
        models[model] = {'model': model, 'male': 1, 'female': 0}
    else:
        models[model] = {'model': model, 'male': 0, 'female': 1}
d = []
print('d = [')
for model in models.values():
  men_percentage = round((model['male'] / (model['male'] + model['female'])) * 100)
  women_percentage = round((model['female'] / (model['male'] + model['female'])) * 100)
  d.append({"model": model['model'], "male": men_percentage, "female": women_percentage})
  print('\t', d[-1])
print(']')

# 5) Для каждой из возрастных групп (до 25, 25-40, от 40) вывести самые популярные марки (можно по одной, можно топ-2)
# {
# "<25": "bmw",
# "25-40": "toyota"
# ">40": "toyota"
# }
under_25 = {'ids': [], 'marks': []}
between_25_40 = {'ids': [], 'marks': []}
below_40 = {'ids': [], 'marks': []}
for person in people:
  if person['age'] < 25:
    under_25['ids'].append(person['id'])
  elif 25 <= person['age'] <= 40:
    between_25_40['ids'].append(person['id'])
  else:
    below_40['ids'].append(person['id'])

for car in cars:
  if car['id'] in under_25['ids']:
    under_25['marks'].append(car['mark'])
  elif car['id'] in between_25_40['ids']:
    between_25_40['marks'].append(car['mark'])
  else:
    below_40['marks'].append(car['mark'])
# most popular mark for people under 25
count_dict = {x: under_25['marks'].count(x) for x in under_25['marks']}
print(max(count_dict, key=count_dict.get))
# most popular mark for people between 25 and 40
count_dict = {x: between_25_40['marks'].count(x) for x in between_25_40['marks']}
print(max(count_dict, key=count_dict.get))
# most popular mark for people below 40
count_dict = {x: below_40['marks'].count(x) for x in below_40['marks']}
print(max(count_dict, key=count_dict.get))

# more efficient:
# Initialize dictionaries to store car marks for each age group
age_groups = {'<25': [], '25-40': [], '>40': []}

# Iterate through people and cars simultaneously
for person, car in zip(people, cars):
    # Determine the age group
    if person['age'] < 25:
        age_group = '<25'
    elif 25 <= person['age'] <= 40:
        age_group = '25-40'
    else:
        age_group = '>40'

    # Add car mark to the respective age group
    age_groups[age_group].append(car['mark'])

# Find the most popular mark for each age group
for age_group, marks in age_groups.items():
    count_dict = {x: marks.count(x) for x in marks}
    most_popular = max(count_dict, key=count_dict.get)
    print(f"Most popular mark for people {age_group}: {most_popular}")

# 6) Для каждой из возрастных групп (до 25, 25-40, от 40) вывести средний год выпуска их автомобиля
age_groups = {'<25': [], '25-40': [], '>40': []}
for person, car in zip(people, cars):
    if person['age'] < 25:
        age_group = '<25'
    elif 25 <= person['age'] <= 40:
        age_group = '25-40'
    else:
        age_group = '>40'
    age_groups[age_group].append(car['year'])

for age_group, years in age_groups.items():
  print(f"Average year of a car manufacture for people {age_group}: {sum(years) // len(years)}")

# 7) Для каждой из возрастных групп (до 25, 25-40, от 40) вывести среднюю стоимость их автомобиля
age_groups = {'<25': [], '25-40': [], '>40': []}
for person, car in zip(people, cars):
    if person['age'] < 25:
        age_group = '<25'
    elif 25 <= person['age'] <= 40:
        age_group = '25-40'
    else:
        age_group = '>40'
    age_groups[age_group].append(car['price'])

for age_group, prices in age_groups.items():
  print(f"Average price of a car for people {age_group}: {sum(prices) // len(prices)}")